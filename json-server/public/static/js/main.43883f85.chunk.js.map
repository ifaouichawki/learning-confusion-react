{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","About","leaders","map","RenderLeader","tag","key","id","left","middle","object","body","heading","RenderLeaders","list","to","active","title","RenderMenuItem","width","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","CommentForm","state","isModalOpen","isNavOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","onClick","isOpen","toggle","value","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","dispatch","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","errorMessage","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43883f85.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n\r\n    );\r\n}","export const baseUrl = 'http://localhost:3000/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-start\">\r\n                    <div className=\"m-1 col-12 col-md-4\">\r\n                            <RenderCard item={props.dish} \r\n                                isLoading={props.dishesLoading} \r\n                                errMess={props.dishesErrMess} \r\n                            />\r\n                    </div>\r\n                    <div className=\"m-1 col-12 col-md\">\r\n                            <RenderCard item={props.promotion} \r\n                                isLoading={props.promoLoading} \r\n                                errMess={props.promoErrMess} \r\n                            />\r\n                    </div>\r\n                    <div className=\"m-1 col-12 col-md\">\r\n                            <RenderCard item={props.leader} \r\n                                isLoading={props.leadersLoading}\r\n                                errMess={props.leadersErrMess}\r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction RenderCard({item,isLoading,errMess}){ \r\n    if (isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if(errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else \r\n\r\n        return(\r\n            <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        )\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {  Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n    const leaders = props.leaders.leaders.map(leader => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n    \r\n    function RenderLeader({leader}){\r\n        return (    \r\n            <Fade in>\r\n                <Media tag=\"li\" key={leader.id} className=\"mt-5 col-12\" >\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </Fade>\r\n        );\r\n    }\r\n\r\n    const RenderLeaders = () => {\r\n\r\n        if (props.leaders.isLoading) {\r\n            return <Loading />;\r\n        }\r\n        else if (props.leaders.errMess) {\r\n            return (\r\n                <h4>{props.leaders.errMess}</h4>\r\n            );\r\n        }\r\n        else return (\r\n            <Media list>\r\n                <Stagger in>\r\n                    {leaders}\r\n                </Stagger>\r\n            </Media>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"text-white bg-primary\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"p-1 row\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <RenderLeaders />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({ dish }) {\r\n      return(\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardImgOverlay>\r\n               <CardTitle>{dish.name}</CardTitle>\r\n            </CardImgOverlay>\r\n            </Link>\r\n      </Card>\r\n      );\r\n    }\r\n\r\n\r\n    const Menu = (props) => {\r\n        \r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"m-1 col-12 col-md-5\">\r\n                   <RenderMenuItem dish={dish}  />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <Loading />\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n            else if (props.dishes.errMess) {\r\n              return(\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n        \r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/hom'></Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    \r\n            \r\n        }\r\n   \r\n\r\n\r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label,Col, Row} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors,  } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    \r\n    }\r\n\r\n    \r\n\r\n    handleSubmit(values) {\r\n        \r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact us</BreadcrumbItem>\r\n                            <hr />\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact us</h3>\r\n                            <hr />\r\n                        </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Please enter your first name',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15),isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: ' Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport {Card,CardImg,CardText,CardBody,CardTitle,Modal, ModalHeader,ModalBody,Breadcrumb,BreadcrumbItem,Button,Row,Col,Label,} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      isNavOpen: false\r\n      \r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil\" /> Submit Comment\r\n        </Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={this.handleSubmit}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" md={12}>\r\n                  Rating\r\n                </Label>\r\n                <Col md={{ size: 12 }}>\r\n                  <Control.select\r\n                    model=\".rating\"\r\n                    name=\"rating\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\" md={12}>\r\n                  Your Name\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Your Name\"\r\n                    className=\"form-control\"\r\n                  \r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"comment\" md={12}>\r\n                  Comment\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.textarea\r\n                    model=\".comment\"\r\n                    id=\"comment\"\r\n                    name=\"comment\"\r\n                    rows={5}\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n  return (\r\n    <div className=\"m-1 col-12 col-md-5\">\r\n         <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n  if (comments != null) {\r\n    return (\r\n      <div className=\"m-1 col-12 col-md-5\">\r\n        <h4>Comments</h4>\r\n        <ul className=\"list-unstyled\">\r\n          <Stagger in>\r\n            {comments.map((comment) => {\r\n              return (\r\n                <Fade in>\r\n                  <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                  </li>\r\n                </Fade>\r\n              );\r\n            })}\r\n          </Stagger>\r\n        </ul>\r\n\r\n        <CommentForm dishId={dishId} postComment={postComment} />\r\n      </div>\r\n    );\r\n  } else return <div />;\r\n}\r\n\r\nconst DishDetail = props => {\r\n  if (props.isLoading) {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else if (props.errMess) {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n   else if (props.dish != null)\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <RenderDish dish={props.dish} />\r\n          <RenderComments comments={props.comments}\r\n            postComment={props.postComment}\r\n            dishId={props.dish.id}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n   else \r\n      return(\r\n        <div></div>\r\n      );\r\n};\r\n\r\nexport default DishDetail;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, \r\n    Modal, ModalBody, ModalHeader,Form, Input, Label, FormGroup } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n\r\n\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }  \r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                  <div className=\"container\">\r\n                      <NavbarToggler onClick={this.toggleNav} />\r\n                     <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                         <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                      </NavbarBrand>\r\n                      <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav navbar>\r\n                             <NavItem>\r\n                                 <NavLink className=\"nav-link\" to=\"/home\">\r\n                                     <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                 </NavLink>\r\n                             </NavItem>\r\n                             <NavItem>\r\n                                 <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                     <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                 </NavLink>\r\n                             </NavItem>\r\n                             <NavItem>\r\n                                 <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                     <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                 </NavLink>\r\n                             </NavItem>\r\n                             <NavItem>\r\n                                 <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                     <span className=\"fa fa-address-card fa-lg\"></span> Contact\r\n                                 </NavLink>\r\n                             </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <span className=\"fa fa-sign-in fa-lg\"></span> login\r\n                                </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                     </Collapse>   \r\n                  </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the world's best cuisines, and create a unique fusion experience, Our lipsmacking crations will tickelyour culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Usenrname</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" \r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Passowrd</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" \r\n                                    innerRef={(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" \r\n                                      innerRef={(input) => this.remember = input}/> Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n} \r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .then(response => {\r\n        alert(response); \r\n        return response; \r\n    })\r\n\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    \r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            alert(\"Thank you for your feedback!\\n\" + JSON.stringify(response)); \r\n            return response; \r\n        })\r\n        .catch(error => {\r\n            console.log('Post feedback: ' + error.message);\r\n            alert('Feedback could not be posted:\\n' + error.message)\r\n        })\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)))\r\n\r\n\r\n}\r\n\r\nexport const dishesLoading = () => (dispatch) => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)))\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)))\r\n}\r\n\r\nexport const promosLoading = () => (dispatch) => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(leader => dispatch(addLeaders(leader)))\r\n        .catch(error => dispatch(leadersFailed(error.message)))\r\n}\r\n\r\nexport const leadersLoading = () => (dispatch) => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADER,\r\n    payload: leaders\r\n});\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\n","export const ADD_COMMENT = 'ADD_COMMENT'; \r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const ADD_LEADER = 'ADD_LEADER'; \r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport  { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos,fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return{\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }  \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes())},\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n    \r\n});\r\n\r\nclass Main extends Component {\r\n\r\n        componentDidMount() {\r\n            this.props.fetchDishes();\r\n            this.props.fetchComments();\r\n            this.props.fetchPromos();\r\n            this.props.fetchLeaders();\r\n        }\r\n      \r\n\r\n        render() {\r\n            const HomePage = () => {\r\n                return(\r\n                    <Home \r\n                        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                        dishesLoading={this.props.dishes.isLoading}\r\n                        dishesErrMess={this.props.dishes.errMess}\r\n                        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                        promoLoading={this.props.promotions.isLoading}\r\n                        promoErrMess={this.props.promotions.errMess}\r\n                        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                        leadersLoading={this.props.leaders.isLoading}\r\n                        leadersErrMess={this.props.leaders.errMess}\r\n                    />\r\n                )\r\n        }\r\n\r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                    <DishDetail \r\n                        dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                        isLoading={this.props.dishes.isLoading}\r\n                        errMess={this.props.dishes.errMess}\r\n                        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                        commentsErrMess={this.props.comments.errMess}\r\n                        postComment={this.props.postComment}\r\n                    />    \r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                                <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders}/>} />\r\n                                <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                                <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                                <Route exact path=\"/contactus\" component={() => \r\n                                <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} /> } /> \r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] };\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, promotions: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADER:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, leaders: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'tel',\r\n    message: ''\r\n}","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore'\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main  />\n          </div>\n        </BrowserRouter>\n      </Provider>  \n    );\n  }\n} \n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n       combineReducers({\r\n           dishes: Dishes,\r\n           comments: Comments,\r\n           promotions: Promotions,\r\n           leaders: Leaders,\r\n           ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n       }),\r\n       applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}